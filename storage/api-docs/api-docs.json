{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Rental API",
        "description": "API documentation for the Car Rental System",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://carrental.test/api",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticates a user and returns an API token along with the user details",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "token_example_here"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Registers a new user",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "description": "User registration details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user was registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log the user out",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "List all cars",
                "operationId": "d8232bc6a16fec784f4a5fca541f9856",
                "responses": {
                    "200": {
                        "description": "A paginated list of cars",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Car"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Create a new car",
                "operationId": "724566c843f5b743f804f2be0147edde",
                "requestBody": {
                    "description": "Car object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand",
                                    "model",
                                    "year",
                                    "price_per_day",
                                    "is_available"
                                ],
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2022
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "is_available": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/cars/{id}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get a specific car",
                "operationId": "8b43987d328663989329b7b6b01db674",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update a car",
                "operationId": "57f1d1b391a2b72602b04e54e0b7ae12",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Car object with updated information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand",
                                    "model",
                                    "year",
                                    "price_per_day",
                                    "is_available"
                                ],
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2022
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "is_available": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Delete a car",
                "operationId": "cf5c2cc6a255c64c21681b2ace173caa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Car deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Cars"
                ],
                "summary": "Partially update a car",
                "operationId": "7c2cee205fc3eeb32c5f25c952671279",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car to partially update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Car object with partial updated information",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2022
                                    },
                                    "price_per_day": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "is_available": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car partially updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Car"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/search/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Search for cars",
                "operationId": "db1322842d7df268ef9cfdbee53e95c7",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search term for filtering cars",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "iph"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Car"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "List all payments",
                "operationId": "65567ad73dd4b0cc01c4856a6bb7e600",
                "responses": {
                    "200": {
                        "description": "A paginated list of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Payment"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment",
                "operationId": "3cb7bc2c2ad5498b4ad9521811750cc1",
                "requestBody": {
                    "description": "Payment object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rental_id",
                                    "amount",
                                    "payment_method",
                                    "status"
                                ],
                                "properties": {
                                    "rental_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 99.99
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "paypal",
                                            "cash"
                                        ],
                                        "example": "credit_card"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "completed",
                                            "failed"
                                        ],
                                        "example": "completed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get a specific payment",
                "operationId": "a4207c19fecbebc99932a8348b19adf1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            }
        },
        "/users/{userId}/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payments by user",
                "operationId": "2117567564cc10655f7de72e7cb75348",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user whose payments to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or no payments available"
                    }
                }
            }
        },
        "/rentals/{rentalId}/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get payments by rental",
                "operationId": "e96e9b0d8093f241c4f9d467a8377e39",
                "parameters": [
                    {
                        "name": "rentalId",
                        "in": "path",
                        "description": "ID of the rental whose payments to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found or no payments available"
                    }
                }
            }
        },
        "/rentals": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "List all rentals",
                "operationId": "1b9bef35feec6a3e04979f07a94036dd",
                "responses": {
                    "200": {
                        "description": "A paginated list of rentals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Rental"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Create a new rental and initiate Stripe checkout session",
                "operationId": "40394fe10e293c02112f075c41ccb537",
                "requestBody": {
                    "description": "Rental data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "car_id",
                                    "start_date",
                                    "end_date",
                                    "total_price"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "car_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2022-01-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2022-01-05"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Stripe checkout session URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "https://checkout.stripe.com/cs_test_a1b2c3"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error processing rental or payment"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/rentals/{id}": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get a specific rental",
                "operationId": "0b23838f4234389c73c6ae96f8ad584d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Delete a rental",
                "operationId": "ee368812d5b66f57c6f0a14397baf489",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "deleted": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/{userId}/rentals": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get rentals by user",
                "operationId": "21eda55f94cc12cffdfcdc923d984164",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user whose rentals to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rentals retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or no rentals available"
                    }
                }
            }
        },
        "/cars/{carId}/rentals": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get rentals by car",
                "operationId": "ee0e44cfbe371de5487828437111fbd0",
                "parameters": [
                    {
                        "name": "carId",
                        "in": "path",
                        "description": "ID of the car whose rentals to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rentals retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found or no rentals available"
                    }
                }
            }
        },
        "/rentals/{id}/cancel": {
            "delete": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Cancel a rental",
                "operationId": "d486f30ebbc2b5cd9cde4ec603d08bb0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental cancelled successfully"
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                }
            }
        },
        "/rentals/{id}/success": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Handle rental payment success",
                "operationId": "1b00cad07633fb488ed1cb1deb2dbe28",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental that succeeded payment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment record created for rental success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rental"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rental not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Car": {
                "required": [
                    "brand",
                    "model",
                    "year",
                    "price_per_day",
                    "is_available"
                ],
                "properties": {
                    "brand": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2022
                    },
                    "price_per_day": {
                        "type": "number",
                        "format": "float",
                        "example": 50
                    },
                    "is_available": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Payment": {
                "required": [
                    "rental_id",
                    "amount",
                    "payment_method",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "rental_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "payment_method": {
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "paypal",
                            "cash"
                        ],
                        "example": "credit_card"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "Rental": {
                "required": [
                    "user_id",
                    "car_id",
                    "start_date",
                    "end_date",
                    "total_price"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "car_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-01-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2022-01-05"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 150.5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-01T12:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Use this to authenticate with Sanctum.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints related to user authentication (login, register, logout)"
        },
        {
            "name": "Cars",
            "description": "Endpoints for managing cars (CRUD and search)"
        },
        {
            "name": "Payments",
            "description": "Endpoints for payment processing and retrieval"
        },
        {
            "name": "Rentals",
            "description": "Endpoints for rental management (booking, success, cancellation)"
        }
    ]
}